{"version":3,"sources":["components/Form.js","withRoot.js","components/Table.js","App.js","index.js"],"names":["Form","props","handleChange","id","val","console","log","target","value","axios","get","then","resp","setState","routes","data","options","selectedroutes","post","state","setTableData","filter","includes","route_id","catch","error","classes","this","className","root","Grid","container","spacing","item","xs","Paper","paper","Typography","variant","gutterBottom","justify","align","FormControl","formControl","InputLabel","Select","labelId","city","onChange","cities","map","MenuItem","label","multiple","input","Input","renderValue","selected","join","route","Checkbox","checked","indexOf","ListItemText","primary","FormHelperText","endAdornment","InputAdornment","position","inputProps","min","style","textAlign","fuel_price","type","startAdornment","bus_cost","utility","demand_charge","bus_type","bus","dc_efficiency","Component","withStyles","theme","flexGrow","margin","minWidth","maxWidth","selectEmpty","marginTop","padding","color","palette","text","secondary","withTheme","createMuiTheme","light","purple","main","dark","green","background","default","withRoot","CssBaseline","StyledTableCell","head","body","fontSize","TableCell","StyledTableRow","backgroundColor","action","hover","TableRow","useStyles","makeStyles","table","visuallyHidden","border","clip","height","overflow","top","width","headers","TableData","useState","orderBy","setOrderBy","tcoComparison","setTCO","emissionsComparison","setEmissions","order","setOrder","tabledata","forEach","row","sort","a","b","orderConst","getCellBGColor","header","formatMoney","amount","decimalCount","decimal","thousands","Math","abs","isNaN","negativeSign","i","parseInt","Number","toFixed","toString","j","length","substr","replace","slice","e","headerCell","sortDirection","TableSortLabel","active","direction","onClick","orderTable","TableContainer","component","Table","aria-label","TableHead","OutlinedInput","TableBody","App","tableData","paddingTop","unit","paddingBottom","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00bcb2df.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    margin: \"0 auto\",\r\n    minWidth: 220,\r\n    maxWidth: '100%'\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n  }\r\n});\r\n\r\nclass Form extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      'city': '',\r\n      'selectedroutes': [],\r\n\r\n      'bus_type': '',\r\n      'bus_cost': 0,\r\n      'utility': 0,\r\n      'fuel_price': 0,\r\n      'demand_charge': 0,\r\n      'dc_efficiency': 0.92,\r\n      'l2_efficiency': 0.0,\r\n\r\n      'cities': [],\r\n      'routes': []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('/cities')\r\n      .then((resp) => {\r\n        this.setState(resp.data);\r\n      })\r\n  }\r\n\r\n  handleChange = (id) => {\r\n    return (val) => {\r\n      console.log(id, val.target.value)\r\n      if (id === 'city') {\r\n        axios.get(\"/routes/\" + val.target.value)\r\n          .then(resp => {\r\n            this.setState({ routes: resp.data.options, selectedroutes: [] })\r\n          })\r\n      }\r\n      this.setState({ [id]: val.target.value }, () => {\r\n        axios.post(\"/tabledata\", this.state)\r\n          .then(resp => {\r\n            this.props.setTableData(resp.data.data.filter(val => this.state.selectedroutes.includes(val.route_id)))\r\n          })\r\n          .catch(error => {\r\n            console.log(this.state)\r\n          })\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={10}>\r\n\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                1. City / Routes\r\n              </Typography>\r\n\r\n              <Grid container justify=\"center\">\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"city-select-label\">Select City</InputLabel>\r\n                    <Select\r\n                      labelId=\"city-select-label\"\r\n                      id=\"city-select\"\r\n                      value={this.state.city}\r\n                      onChange={this.handleChange('city')}\r\n                    >\r\n                      {this.state.cities.map(city => (\r\n                        <MenuItem key={city.value} value={city.value}>{city.label}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"routes-select-label\">Select routes to analyse</InputLabel>\r\n                    <Select\r\n                      labelId=\"routes-select-label\"\r\n                      id=\"routes-select\"\r\n                      multiple\r\n                      value={this.state.selectedroutes}\r\n                      onChange={this.handleChange('selectedroutes')}\r\n                      input={<Input />}\r\n                      renderValue={(selected) => selected.join(', ')}\r\n                    >\r\n                      {this.state.routes.map((route) => (\r\n                        <MenuItem key={route.value} value={route.value}>\r\n                          <Checkbox checked={this.state.selectedroutes.indexOf(route.value) > -1} />\r\n                          <ListItemText primary={route.label} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                2. Price Parameters\r\n              </Typography>\r\n\r\n              <Grid container justify=\"center\">\r\n               \r\n                <Grid item xs={3} align=\"center\">\r\n                  <FormControl className={classes.formControl}>\r\n                    <FormHelperText id=\"fuel-price-helper-text\">Fuel price</FormHelperText>\r\n                    <Input \r\n                      id=\"numeric-fuel-cost\" \r\n                      endAdornment={<InputAdornment position=\"end\">$/gallon eq</InputAdornment>} \r\n                      inputProps={{min: 0, style: { textAlign: 'end' }}} \r\n                      value={this.state.fuel_price} \r\n                      type=\"number\"\r\n                      onChange={this.handleChange('fuel_price')} \r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={3} align=\"center\">\r\n                  <FormControl className={classes.formControl}>\r\n                    <FormHelperText id=\"utility-price-helper-text\">Cost of Electric Bus</FormHelperText>\r\n                    <Input \r\n                      id=\"numeric-bus-cost\" \r\n                      startAdornment={ <InputAdornment position=\"start\">$</InputAdornment> } \r\n                      value={this.state.bus_cost} \r\n                      type=\"number\"\r\n                      onChange={this.handleChange('bus_cost')}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={3} align=\"center\">\r\n                  <FormControl className={classes.formControl}>\r\n                    <FormHelperText id=\"utility-price-helper-text\">Utility charges</FormHelperText>\r\n                    <Input \r\n                      id=\"numeric-utility-cost\" \r\n                      endAdornment={<InputAdornment position=\"end\">$/kWh</InputAdornment>} \r\n                      inputProps={{min: 0, style: { textAlign: 'end' }}} \r\n                      value={this.state.utility} \r\n                      type=\"number\"\r\n                      onChange={this.handleChange('utility')} \r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={3} align=\"center\">\r\n                  <FormControl className={classes.formControl}>\r\n                    <FormHelperText id=\"demand-price-helper-text\">Demand Charge</FormHelperText>\r\n                    <Input \r\n                      id=\"numeric-demand-cost\" \r\n                      endAdornment={<InputAdornment position=\"end\">$/kW-month</InputAdornment>}\r\n                      inputProps={{min: 0, style: { textAlign: 'end' }}}   \r\n                      value={this.state.demand_charge} \r\n                      type=\"number\"\r\n                      onChange={this.handleChange('demand_charge')} \r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                3. Vehicle Parameters\r\n              </Typography>\r\n\r\n              <Grid container justify=\"center\">\r\n\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"routes-select-label\">Select bus type</InputLabel>\r\n                    <Select\r\n                      labelId=\"routes-select-label\"\r\n                      id=\"routes-select\"\r\n                      value={this.state.bus_type}\r\n                      onChange={this.handleChange('bus_type')}\r\n                      input={<Input />}\r\n                    >\r\n                      {[{ 'label': '30 Feet', 'value': '30ft' }, { 'label': '40 Feet', 'value': '40ft' }, { 'label': '60 Feet', 'value': '60ft' }].map((bus) => (\r\n                        <MenuItem key={bus.value} value={bus.value}>\r\n                          {bus.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl className={classes.formControl}>\r\n                    <FormHelperText id=\"demand-price-helper-text\">DC Charging efficiency</FormHelperText>\r\n                    <Input \r\n                      id=\"numeric-dc-efficiency\" \r\n                      endAdornment={<InputAdornment position=\"end\">Decimal %</InputAdornment>}\r\n                      inputProps={{min: 0, style: { textAlign: 'end' }}}\r\n                      value={this.state.dc_efficiency} \r\n                      type=\"number\"\r\n                      onChange={this.handleChange('dc_efficiency')} \r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Form);\r\n","import React from \"react\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport {purple, green} from \"@material-ui/core/colors\";\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\n// A theme with custom primary and secondary color.\r\n// It's optional.\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: purple[300],\r\n      main: purple[500],\r\n      dark: purple[700]\r\n    },\r\n    secondary: {\r\n      light: green[300],\r\n      main: green[500],\r\n      dark: green[700]\r\n    },\r\n    background: {\r\n      default: \"#f5f5f5\"\r\n    }\r\n  }\r\n});\r\n\r\nfunction withRoot(Component) {\r\n  function WithRoot(props) {\r\n    // MuiThemeProvider makes the theme available down the React tree\r\n    // thanks to React context.\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n        <CssBaseline />\r\n        <Component {...props} />\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n\r\n  return WithRoot;\r\n}\r\n\r\nexport default withRoot;","import React, { useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\n\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    textAlign: 'center'\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    textAlign: 'center'\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  }\r\n});\r\n\r\nconst headers = [\r\n  {label: 'Route ID', value: 'route_id'}, \r\n  {label: 'No of buses', value: 'No of buses'}, \r\n\r\n  {label: 'TCO per route - D ($/yr)', value: 'TCO per route - D'}, \r\n  {label: 'Level of Service -D', value: 'Level of Service -D'}, \r\n  {label: 'Emissions -D (ton CO2/yr)', value: 'Emissions -D'}, \r\n  {label: 'Health impact -D (USD Millions 2020)', value: 'Health impact -D'}, \r\n  {label: '', value: ''},\r\n  {label: 'TCO <=', value: ''}, \r\n  {label: 'Emissions <=', value: ''},\r\n  {label: 'Technically Feasible?', value: 'feasible'}, \r\n  {label: '', value: ''}, \r\n  {label: 'TCO per route - E ($/yr)', value: 'TCO per route - E'}, \r\n  {label: 'Level of Service -E', value: 'Level of Service -E'}, \r\n  {label: 'Emissions -E (ton CO2/yr)', value: 'Emissions -E'}, \r\n  {label: 'Health impact -E (USD Millions 2020)', value: 'Health impact -E'}\r\n]\r\n\r\nexport default function TableData(props) {\r\n  const classes = useStyles();\r\n  const [orderBy, setOrderBy] = useState(0)\r\n  const [tcoComparison, setTCO] = useState(100)\r\n  const [emissionsComparison, setEmissions] = useState(100)\r\n  const [order, setOrder] = useState(\"asc\")\r\n  const { tabledata } = props\r\n\r\n  tabledata.forEach(row => {\r\n    row[\"tcoComp\"] = row[\"TCO per route - E\"] <= row[\"TCO per route - D\"] * (tcoComparison / 100.0) ? true : false;\r\n    row[\"emissionsComp\"] = row[\"Emissions -E\"] <= row[\"Emissions -D\"] * (emissionsComparison / 100.0) ? true : false;\r\n    row[\"feasible\"] = row[\"tcoComp\"] || row[\"emissionsComp\"] ? \"yes\" : \"no\";\r\n  })\r\n\r\n  tabledata.sort((a, b) => {\r\n    let orderConst = order === \"asc\" ? 1 : -1;\r\n\r\n    if (a[headers[orderBy].value] < b[headers[orderBy].value]) {\r\n      return orderConst;\r\n    } else if (a[headers[orderBy].value] > b[headers[orderBy].value]) {\r\n      return -orderConst;\r\n    }\r\n    return 0;\r\n  })\r\n\r\n  const orderTable = (i) => {\r\n    if (orderBy === i) {\r\n      setOrder(order === \"asc\" ? \"desc\" : \"asc\")\r\n    } else {\r\n      setOrder(\"asc\")\r\n      setOrderBy(i)\r\n    }\r\n  }\r\n\r\n  const getCellBGColor = (row, header) => {\r\n    if (header === \"TCO per route - E\") {\r\n      return row[\"tcoComp\"] ? \"green\" : \"red\"\r\n    } else if (header === \"Emissions -E\") {\r\n      return row[\"emissionsComp\"] ? \"green\" : \"red\"\r\n    } else if (header === \"feasible\") {\r\n      return row[\"feasible\"] === \"yes\" ? \"green\" : \"red\"\r\n    } else {\r\n      return \"initial\"\r\n    }\r\n  }\r\n\r\n  const formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\r\n    try {\r\n      decimalCount = Math.abs(decimalCount);\r\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\r\n\r\n      const negativeSign = amount < 0 ? \"-\" : \"\";\r\n\r\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\r\n      let j = (i.length > 3) ? i.length % 3 : 0;\r\n\r\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const headerCell = (header, i) => (\r\n    <StyledTableCell align={i > 1 ? \"right\" : \"left\"} sortDirection={orderBy === i ? order : false}>\r\n      <TableSortLabel\r\n        active={orderBy === i}\r\n        direction={orderBy === i ? order : 'asc'}\r\n        onClick={() => orderTable(i)}\r\n      >\r\n        {header.label}\r\n        {orderBy === i ? (\r\n          <span className={classes.visuallyHidden}>\r\n            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n          </span>\r\n        ) : null}\r\n      </TableSortLabel>\r\n    </StyledTableCell>  \r\n  )\r\n\r\n\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: 80 }}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {headers.slice(0, 7).map(headerCell)}\r\n            <StyledTableCell>\r\n              {\"TCO <=\"}\r\n              <OutlinedInput \r\n                id=\"numeric-tco-comp\" \r\n                endAdornment={<InputAdornment position=\"end\">%</InputAdornment>} \r\n                inputProps={{min: 0, style: { textAlign: 'center' }}} \r\n                margin=\"dense\" \r\n                value={tcoComparison} \r\n                type=\"number\" \r\n                onChange={(val) => setTCO(val.target.value)} \r\n              />\r\n            </StyledTableCell>\r\n            <StyledTableCell>\r\n              {\"Emissions <=\"}\r\n              <OutlinedInput \r\n                id=\"numeric-emissions-comp\" \r\n                endAdornment={<InputAdornment position=\"end\">%</InputAdornment>} \r\n                inputProps={{min: 0, style: { textAlign: 'center' }}} \r\n                margin=\"dense\" \r\n                value={emissionsComparison} \r\n                type=\"number\"\r\n                onChange={(val) => setEmissions(val.target.value)} \r\n              />\r\n            </StyledTableCell>\r\n            {headers.slice(9).map((header, i) => headerCell(header, i + 9))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {tabledata.map((row) => (\r\n            <StyledTableRow key={row.route_id}>\r\n              {headers.map((header, i) => (\r\n                <StyledTableCell align={i > 1 ? \"right\" : \"left\"} style={{ backgroundColor: getCellBGColor(row, header.value) }}>\r\n                  {header.label.includes(\"$\") ? formatMoney(row[header.value]) : row[header.value]}\r\n                </StyledTableCell>\r\n              ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React, { Component } from 'react';\nimport Form from './components/Form';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport withRoot from './withRoot';\nimport TableData from './components/Table';\n\nconst styles = theme => ({\n  root: {\n    paddingTop: theme.spacing.unit * 5,\n    paddingBottom: theme.spacing.unit * 15,\n  },\n});\n\n\n\n\nclass App extends Component {\n\n  state = {\n    tableData: []\n  }\n\n  setTableData = (data) => {\n    this.setState({tableData: data})\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    console.log(this.state)\n\n    return (\n      <div className={classes.root}>\n        <Typography variant=\"h1\" component=\"h2\" gutterBottom align=\"center\">\n          EV Fleets\n        </Typography>\n        <div style={{width: '70%', margin: '0 auto'}}>\n          <Form setTableData={this.setTableData} />\n        </div>\n        <div style={{width: '95%', margin: '0 auto'}}>\n          <TableData tabledata={this.state.tableData} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRoot(withStyles(styles)(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios';\n\nimport 'fontsource-roboto';\n\n\naxios.defaults.baseURL = 'http://localhost:5000';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}